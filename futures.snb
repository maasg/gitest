{
  "metadata" : {
    "id" : "2d86ed87-33af-4cc8-97fd-4e547f71c465",
    "name" : "futures",
    "user_save_timestamp" : "2016-09-11T17:58:24.686Z",
    "auto_save_timestamp" : "2016-09-11T17:58:24.686Z",
    "language_info" : {
      "name" : "scala",
      "file_extension" : "scala",
      "codemirror_mode" : "text/x-scala"
    },
    "trusted" : true,
    "sparkNotebook" : {
      "xSparkVersion" : "1.6.1",
      "xWithParquet" : "false",
      "buildTime" : "Fri Sep 09 15:45:04 CEST 2016",
      "sparkNotebookVersion" : "0.7.0-SNAPSHOT",
      "xJlineDef" : "(org.scala-lang,2.10.5)",
      "scalaVersion" : "2.10.5",
      "sbtVersion" : "0.13.9",
      "formattedShaVersion" : "Some(3a3dcb5b855b810cda6e799bb8bbfded82f40fec-SNAPSHOT)",
      "xJets3tVersion" : "0.7.1",
      "xWithHive" : "false",
      "xHadoopVersion" : "2.2.0"
    },
    "customLocalRepo" : "/tmp/localrepo",
    "customRepos" : null,
    "customDeps" : null,
    "customImports" : null,
    "customArgs" : null,
    "customSparkConf" : {
      "spark.executor.memory" : "4G"
    },
    "customVars" : null
  },
  "cells" : [ {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : false,
      "id" : "1AB2D9728880468D9A4B22C9B7F24232"
    },
    "cell_type" : "code",
    "source" : "import scala.concurrent.{Future, Promise}\nimport scala.util.{Success, Failure}\nimport scala.concurrent.ExecutionContext.Implicits.global\ndef failFast[T](futures: Seq[Future[T]]): Future[Seq[T]] = {\n  val promise = Promise[Seq[T]]\n  futures.foreach{f => f.onFailure{case ex => promise.failure(ex)}}\n  val res = Future.sequence(futures)\n  promise.completeWith(res).future\n}\n  \n  ",
    "outputs" : [ {
      "name" : "stdout",
      "output_type" : "stream",
      "text" : "import scala.concurrent.{Future, Promise}\nimport scala.util.{Success, Failure}\nimport scala.concurrent.ExecutionContext.Implicits.global\nfailFast: [T](futures: Seq[scala.concurrent.Future[T]])scala.concurrent.Future[Seq[T]]\n"
    }, {
      "metadata" : { },
      "data" : {
        "text/html" : ""
      },
      "output_type" : "execute_result",
      "execution_count" : 7
    } ]
  }, {
    "metadata" : {
      "trusted" : true,
      "input_collapsed" : false,
      "collapsed" : true,
      "id" : "F12302858350471B9A429A58FE06BDC4"
    },
    "cell_type" : "code",
    "source" : "val f1 = Future[Int]{Thread.sleep(2000); throw Exception(\"boom\")}\nval f2 = Future[Int]{Thread.sleep(5000); 42}\nval f3 = Future[Int]{Thread.sleep(10000); 101}\nval seq",
    "outputs" : [ ]
  } ],
  "nbformat" : 4
}