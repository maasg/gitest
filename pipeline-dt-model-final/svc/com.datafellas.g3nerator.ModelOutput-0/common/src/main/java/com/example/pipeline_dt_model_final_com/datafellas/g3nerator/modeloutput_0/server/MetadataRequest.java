/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MetadataRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MetadataRequest\",\"namespace\":\"com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server\",\"fields\":[{\"name\":\"pretty\",\"type\":\"boolean\",\"default\":false}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public boolean pretty;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MetadataRequest() {}

  /**
   * All-args constructor.
   */
  public MetadataRequest(java.lang.Boolean pretty) {
    this.pretty = pretty;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pretty;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pretty = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pretty' field.
   */
  public java.lang.Boolean getPretty() {
    return pretty;
  }

  /**
   * Sets the value of the 'pretty' field.
   * @param value the value to set.
   */
  public void setPretty(java.lang.Boolean value) {
    this.pretty = value;
  }

  /** Creates a new MetadataRequest RecordBuilder */
  public static com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder newBuilder() {
    return new com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder();
  }
  
  /** Creates a new MetadataRequest RecordBuilder by copying an existing Builder */
  public static com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder newBuilder(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder other) {
    return new com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder(other);
  }
  
  /** Creates a new MetadataRequest RecordBuilder by copying an existing MetadataRequest instance */
  public static com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder newBuilder(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest other) {
    return new com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for MetadataRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MetadataRequest>
    implements org.apache.avro.data.RecordBuilder<MetadataRequest> {

    private boolean pretty;

    /** Creates a new Builder */
    private Builder() {
      super(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pretty)) {
        this.pretty = data().deepCopy(fields()[0].schema(), other.pretty);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MetadataRequest instance */
    private Builder(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest other) {
            super(com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.pretty)) {
        this.pretty = data().deepCopy(fields()[0].schema(), other.pretty);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'pretty' field */
    public java.lang.Boolean getPretty() {
      return pretty;
    }
    
    /** Sets the value of the 'pretty' field */
    public com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder setPretty(boolean value) {
      validate(fields()[0], value);
      this.pretty = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'pretty' field has been set */
    public boolean hasPretty() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'pretty' field */
    public com.example.pipeline_dt_model_final_com.datafellas.g3nerator.modeloutput_0.server.MetadataRequest.Builder clearPretty() {
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public MetadataRequest build() {
      try {
        MetadataRequest record = new MetadataRequest();
        record.pretty = fieldSetFlags()[0] ? this.pretty : (java.lang.Boolean) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
